pipeline {
    agent any
    environment {
        SONARQUBE_CREDENTIALS = 'sonar-tok' // SonarQube credentials ID
        SONARQUBE_URL = 'http://216.48.191.104/:9000/' // SonarQube server URL
        SONAR_PROJECT_KEY = 'logistic.com' // SonarQube project key
        SONAR_PROJECT_NAME = 'logistic.com' // SonarQube project name
    }
    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository
                https://github.com/ssanthosh2k3/logistic.com.git', credentialsId: 'githubup'
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    // Run npm install inside a Docker container using the node:16 image
                    sh 'docker run --rm -v $PWD:/app -w /app node:16 npm install'
                }
            }
        }
        stage('SonarQube Scan') {
            steps {
                script {
                    // Run SonarQube scanner on the project inside a Docker container
                    withCredentials([string(credentialsId: SONARQUBE_CREDENTIALS, variable: 'SONAR_TOKEN')]) {
                        sh '''
                            docker run --rm -v $PWD:/app -w /app sonarsource/sonar-scanner-cli \
                                -Dsonar.projectKey=$SONAR_PROJECT_KEY \
                                -Dsonar.projectName=$SONAR_PROJECT_NAME \
                                -Dsonar.host.url=$SONARQUBE_URL \
                                -Dsonar.login=$SONAR_TOKEN \
                                -Dsonar.http.timeout=60000
                        '''
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'SonarQube scan completed successfully.'
        }
        failure {
            echo 'SonarQube scan failed.'
        }
    }
}
